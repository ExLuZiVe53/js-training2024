//! Глобальні об'єкти
//* -- (window) - об'єкт який знаходиться в браузері
//* -- (global) - об'єкт який присутній в node.js

// Для того щоб не змішувати ці об'єкти вирішили створити універсальний об'єкт
//* -- (globalThis) - уніфікований глобальний об'єкт

//! Властивості глобальних об'єктів
// console - властивість глобальних об'єктів або браузера або node.js
//* -- (window.console);
//* -- (global.console);

//! Метод - це властивість об'єкта значенням якого є функція

// const myCity = {
//   city: "New York",
//   cityGreeting: function () {
//     console.log("Greetings!!");
//   },
// };

// myCity.cityGreeting();
//* Скорочений запис метода об'єкта

// const myCity1 = {
//   city: "Miami",
//   cityGreeting() {
//     console.log("You-ho!!");
//   },
// };

// myCity1.cityGreeting();

//* Методи та властивості об'єкта відрізняються лише тим,

// : - myCity1.city -- властивість об'єкта дістається через крапку
// : - myCity.cityGreeting() - для того щоб використати саме метод об'єкта потрібно обов'язково викликати його(функцію) за допомогою "()"

// =============================================================================
//!  JSON - JAVA SCRIPT OBJECT NOTATION
//* JSON - це формат обміну даними між комп'ютерами в інтернеті

// {
//     "userId": 1,
//     "id": 1,
//     "title": "Test title",
//     "status": {
//         "completed": false
//     }
// }

//* JSON - передається у вигляді строки
// {"userId": 1, "id": 1, "title": "Test title", "status": {"completed": false}}
//* Для того щоб конвертувати строку в об'єкт використовується метод
//! JSON.parse()

// {
//   userId: 1;
//   id: 1;
//   title: "Test title";
//   status: {
//     completed: false;
//   }
// }

//* Навпаки з об'єкта в строку використовуємо
//! JSON.stringify()
