//! Інструкції (Кожну "інструкцію" потрібно обов'язково завершувати ";". Крім умовних інструкцій "if else" та циклів, які закінчуються на "{}". Тому що, це блок інструкцій)

//* Вираз - завжди повертає значення(наприклад "=")

//* Інструкції - наприклад коли оголошуємо зміну за допомогою "let a"(Виконує деякі дії)

// let a;
// const b = 5;

// if (a > b) {
//   console.log("a is larger");
// }

// for (let i = 0; i < 5; i += 1) {
//   console.log(i);
// }

//* Вираз-інструкція(expression-statements)

// "abc";
// a = a + 3;
// c = a + b;
// d = "Good" + "Evening";
// myFunction(c, d);
// console.log("Hey");

//! Крапку з комою(";") можна пропускати

// Вираз може бути інструкцією

//* Вираз може бути використане як аргумент у виклику функції

// function myFn(a) {
//   console.log(a);
// }

// const b = true;
// let c = 10;

// myFn(2 + 3); // 5
// myFn(b); // true
// myFn((c = c + 1)); 11 // Присвоювання значення змінній це - вираз, який повертає значення
// =============================================================
//? Uncaught syntax error: Unexpected token ";"

// myFn((c = c + 1;) // функцію не можна викликати з інструкцією в якості аргументу, в яку при конвертації використали ";"
// myFn(let d)

//?=====================================================================
//! Масиви(Array)

//* Масив - це об'єкт з числовими іменами властивостей

// Формат запису масивів

const myArray = [1, 2, 3];
console.log(myArray); // [1, 2, 3]

// Створення масиву за допомогою створення екземпляру класу "Array" методом "new"
const myArray1 = new Array(4, 5, 6);
console.log(myArray1);

//* Структура масиву

/* 
    (3) [1, 2, 3] i
        0: 1
        1: 2
        2: 3
        length: 3
            __proto__: Array(0)
*/
